#!/bin/bash

# Function to detect OS distribution
detect_distro() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        echo "$ID"
    else
        echo "unknown"
    fi
}

# Detect the OS distribution
distro=$(detect_distro)

# Ask for user input
echo -n "User (example: JohnSmith): " && read user
echo -n "Password for that user: " && read pass
echo -n "DC hostname/IP: " && read dc

# Hash the password into NTLM
HASH=$(echo -n 'P@ssw0rd1!' | iconv -f ASCII -t UTF-16LE | openssl dgst -md4 -provider legacy -provider default | awk '{print $2}')

# Enumerate accounts and passwords
echo ""
echo "==========================================="
echo "== exporting user+hashes, please wait... =="
echo "==========================================="

if [ "$distro" == "kali" ]; then
    # Command for Kali Linux
    impacket-secretsdump -just-dc "LAB/$user@$dc" -hashes "aad3b435b51404eeaad3b435b51404ee:$HASH" > domain_dump.txt
else
    # Command for other distributions
    secretsdump.py -just-dc "LAB/$user@$dc" -hashes "aad3b435b51404eeaad3b435b51404ee:$HASH" > domain_dump.txt
fi

# Cleanup only users and hashes
cat domain_dump.txt | grep ':::' > domain_clean.txt

# Crack hashes
hashcat -m 1000 -a 0 ./domain_clean.txt /usr/share/wordlists/rockyou.txt -o hits.txt
echo ""
echo "==================================================="
echo "== Cracking complete, please see Needs_Reset.txt =="
echo "==================================================="

# Enumerate users that need to reset their passwords
echo -n "" > Needs_Reset.txt
for i in $(cat hits.txt | cut -d ':' -f1); do grep $i domain_clean.txt | cut -d ':' -f1 | cut -d '\' -f2 >> Needs_Reset.txt; done

# Remove .potfile so that we cannot see the users and their passwords
echo "" > /home/standard/.local/share/hashcat/hashcat.potfile
