#!/bin/bash

# Check if the script is run with sudo
if [ "$EUID" -eq 0 ]; then
  echo "Please do not run this script with sudo."
  exit 1
fi

# Prompt for user input
read -p "User (example: JohnSmith): " user
read -sp "Password for that user: " pass
echo
read -p "DC hostname/IP: " dc

# Hash password into NTLM
HASH=$(echo -n "$pass" | iconv -f ASCII -t UTF-16LE | openssl dgst -md4 | cut -d ' ' -f2)

# Enumerate accounts and passwords
echo ""
echo "==========================================="
echo "== Exporting user+hashes, please wait... =="
echo "==========================================="
impacket-secretsdump -just-dc "LAB/$user@$dc" -hashes "aad3b435b51404eeaad3b435b51404ee:$HASH" > domain_dump.txt

# Cleanup to only users and hashes
grep ':::' domain_dump.txt > domain_clean.txt

# Crack hashes using hashcat
echo ""
echo "==================================================="
echo "== Cracking complete, please see Needs_Reset.txt =="
echo "==================================================="
hashcat -m 1000 -a 0 domain_clean.txt /usr/share/wordlists/rockyou.txt -o hits.txt

# Enumerate users that need to reset their passwords
: > Needs_Reset.txt
cut -d ':' -f1 hits.txt | while read -r user_hash; do
  grep "$user_hash" domain_clean.txt | cut -d ':' -f1 | cut -d '\' -f2 >> Needs_Reset.txt
done

# Remove .potfile to secure cracked passwords
: > ~/.local/share/hashcat/hashcat.potfile

echo "Script complete. Check Needs_Reset.txt for users who need to reset their passwords."
